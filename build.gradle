buildscript {
    repositories {
        gradlePluginPortal()
        mavenCentral()
    }
}

plugins {
    id "java-gradle-plugin"
    id "maven-publish"
    id "org.jetbrains.kotlin.jvm" version "1.9.22" // https://docs.gradle.org/current/userguide/compatibility.html#kotlin
    id "org.jetbrains.kotlin.plugin.serialization" version "1.9.22"
    id "org.jlleitschuh.gradle.ktlint" version "12.1.1"
    id "com.gradle.plugin-publish" version "1.2.1"
}

group = "com.atkinsondev"
version = "1.14.0"

gradlePlugin {
    website = 'https://github.com/craigatk/opentelemetry-gradle-plugin'
    vcsUrl = 'https://github.com/craigatk/opentelemetry-gradle-plugin'
    plugins {
        opentelemetryPlugin {
            id = 'com.atkinsondev.opentelemetry-build'
            implementationClass = 'com.atkinsondev.opentelemetry.build.OpenTelemetryBuildPlugin'
            displayName = 'OpenTelemetry build plugin'
            description = 'Instrument your Gradle build with OpenTelemetry observability to find and eliminate build bottlenecks'
            tags.addAll(['observability', 'opentelemetry', 'telemetry'])
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "io.opentelemetry:opentelemetry-api:$otelVersion"
    implementation "io.opentelemetry:opentelemetry-sdk:$otelVersion"
    implementation "io.opentelemetry:opentelemetry-exporter-otlp:$otelVersion"
    implementation "io.opentelemetry:opentelemetry-exporter-zipkin:$otelVersion"
    implementation "io.opentelemetry.semconv:opentelemetry-semconv:$otelSemConvVersion"
    implementation("io.opentelemetry.proto:opentelemetry-proto:$otelProtoVersion")

    testImplementation gradleTestKit()

    testImplementation(platform("org.junit:junit-bom:5.10.2"))
    testImplementation "org.junit.jupiter:junit-jupiter"

    testImplementation "org.wiremock:wiremock:3.6.0"
    testImplementation "io.strikt:strikt-core:0.34.1"
    testImplementation "org.awaitility:awaitility-kotlin:4.2.1"
    testImplementation "io.mockk:mockk:1.13.11"
    testImplementation "org.testcontainers:testcontainers:1.19.8"
    testImplementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.3"
    testImplementation "com.squareup.okhttp3:okhttp:4.12.0"
}

test {
    useJUnitPlatform()

    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
}

ktlint {
    disabledRules = ["no-wildcard-imports"]
}

